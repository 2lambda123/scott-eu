version: "3.3"

services:
  caddy:
    image: lucaslorentz/caddy-docker-proxy:alpine
    networks:
      - overlay
    ports:
      - 8080:8080
    command: -port 8080 -log stdout
    # TODO why
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      replicas: 1
      restart_policy:
        condition: none
  planner:
    image: scott/planner-reasoner
    environment:
      - PORT=3020 # internal port
    networks:
      overlay:
        aliases:
          - planner.svc
    #    ports:
    #      - "3021:3020" # external:internal
    stdin_open: true
    deploy:
      labels:
        caddy.address: planner.svc
        caddy.targetport: 3020
        caddy.tls: "off"
      replicas: 1
      restart_policy:
        # debug only
        condition: none
      resources:
        limits:
          memory: 384m
  sandbox-whc:
    image: "scott/webapp-whc"
    networks:
      - overlay
    ports:
      - "8080:8080"
    deploy:
      # not ready for scaling yet
      replicas: 1
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: on-failure
      resources:
        limits:
          memory: 512m
    depends_on:
      - warehouse-fuseki
      - mosquitto
  planner-reasoner:
    image: "scott/planner-reasoner"
    environment:
      - PORT=3020 # internal port
    networks:
      - overlay
    ports:
      - "3021:3020" # mapping of external port to internal port
    stdin_open: true
    deploy:
      replicas: 2
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: on-failure
      resources:
        limits:
          memory: 512m
  sandbox-twin:
    image: "scott/webapp-twin-robot"
    networks:
      - overlay
    ports:
      - "8081:8080"
    depends_on:
      - warehouse-fuseki
      - mosquitto
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 512m
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: on-failure
  svc-location:
    image: "scott/webapp-svc-location"
    networks:
      - overlay
    ports:
      - "8090:8080"
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 512m
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: on-failure
  sandbox-executor:
    image: "scott/webapp-executor"
    networks:
      - overlay
    ports:
      - "8083:8080"
    depends_on:
      - sandbox-whc
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 512m
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: on-failure
  warehouse-fuseki:
    image: "scott/jena-fuseki"
    networks:
      - overlay
    ports:
      - "3030:3030"
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: on-failure
      resources:
        limits:
          memory: 1024m
  mosquitto:
    image: "scott/eclipse-mosquitto"
    networks:
      - overlay
    ports:
      - "1883:1883"
      - "9001:9001"
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: on-failure
      resources:
        limits:
          memory: 384m
networks:
  overlay:
