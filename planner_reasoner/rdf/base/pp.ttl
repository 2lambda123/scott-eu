@prefix : <http://ontology.cf.ericsson.net/planning_ontology#> .
@prefix pp: <http://ontology.cf.ericsson.net/planning_ontology#> .
@prefix ppos: <http://ontology.cf.ericsson.net/planning_ontology_oslc_shapes#> .
@prefix wd: <http://ontology.cf.ericsson.net/warehouse_domain#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix oslc: <http://open-services.net/ns/core#> .
@prefix sh: <http://www.w3.org/ns/shacl#> . # shapes constraint languge SHACL
@base <http://ontology.cf.ericsson.net/planning_ontology> .

#studied from the bnf specification of PDDL 2.1. https://www.jair.org/media/1129/live-1129-2132-jair.pdf without durative actions

<http://ontology.cf.ericsson.net/planning_ontology> rdf:type rdf:Ontology ;
                                                   rdf:versionIRI <http://ontology.cf.ericsson.net/planning_ontology/1.0.0> .





:Action rdf:type rdf:class .
:Precondition rdf:type rdf:class .
:Effect  rdf:type rdf:class .
:GoalDescription rdf:type rdf:class .
:OrderedArgument rdf:type rdf:class .  #all subclasses of OrderedArgument will have an order property sh:order to show the relative position of that element in the parent
:VariableType rdf:type :OrderedArgument .
:Variable rdf:type :OrderedArgument .
:FluentType rdf:type :OrderedArgument . #no need to be ordered!
:FluentTypeArgument rdf:type :OrderedArgument .
:Fluent rdf:type :OrderedArgument .
:FluentArgument rdf:type :OrderedArgument .
:PredicateType rdf:type rdf:class . #no need to be ordered
:PredicateTypeArgument rdf:type :OrderedArgument .
:Predicate rdf:type :OrderedArgument .
:PredicateArgument rdf:type :OrderedArgument .
:FExp rdf:type :OrderedArgument .
:FHead rdf:type :OrderedArgument .
:NumericLiteral rdf:type :OrderedArgument .

:AssignmentOperator rdf:type :OrderedArgument .  #are possible in effects over fluents (decrease, increase, scaleup, assign, scaledown
:BinnaryOperator rdf:type :OrderedArgument  .  #are possible in preconditions and effects over fluents (+, -, * and /)

:OrderedArgument rdf:type :OrderedArgument .

:BinaryComparison rdf:type :OrderedArgument . #e.g. binary comparision operators are only allowed in precondition

:EffectOrderedArgument rdf:type :OrderedArgument .


:MinusFunction rdf:type rdf:OrderedArgument ;
                 rdfs:label "-".


#logical operators
:And rdf:type rdf:OrderedArgument ;
                 rdfs:label "and".

:AndGD rdf:type :And .
:AndEffect rdf:type :And .


:Or rdf:type :OrderedArgument ;
    rdfs:label "or".

:Not rdf:type :OrderedArgument ;
     rdfs:label "not".
:NotGD rdf:type :Not .
:NotEffect rdf:type :Not .

:Imply rdf:type :OrderedArgument ;
       rdfs:label "imply".

:Forall rdf:type :OrderedArgument ;
       rdfs:label "forall".

:Exists rdf:type :OrderedArgument ;
       rdfs:exists "forall".



#binary comparison only allowed in precondition
:GT rdf:type :BinaryComparison ;
    rdfs:label ">".
:LT rdf:type :BinaryComparison ;
    rdfs:label "<".
:EQ rdf:type :BinaryComparison ;
    rdfs:label "=".
:GE rdf:type :BinaryComparison ;
    rdfs:label ">=".
:LE rdf:type :BinaryComparison ;
    rdfs:label "<=".

#binary operations over fluents, allowed in precondition and effect
:Plus rdf:type :BinaryOperator ;
      rdfs:label "+".
:Minus rdf:type :BinaryOperator ;
      rdfs:label "-".
:Multply rdf:type :BinaryOperator ;
        rdfs:label "*".
:Divide rdf:type :BinaryOperator ;
        rdfs:label "/".


#assignment operators allowed in effect, they can be done only over fluent
:Increase rdf:type :AssignmentOperator ;
          rdfs:label "increase".
:Decrease rdf:type :AssignmentOperator ;
          rdfs:label "decrease".
:Assign rdf:type :AssignmentOperator ;
        rdfs:label "assign".
:ScaleUp rdf:type :AssignmentOperator ;
        rdfs:label "scale-up".
:ScaleDown rdf:type :AssignmentOperator ;
           rdfs:label "scale-down".

#for conditional effect, allowed only in the effect
:When rdf:type :OrderedArgument .
