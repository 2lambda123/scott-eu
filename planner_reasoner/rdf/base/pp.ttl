@prefix : <http://ontology.cf.ericsson.net/planning_ontology#> .
@prefix pp: <http://ontology.cf.ericsson.net/planning_ontology#> .
@prefix ppos: <http://ontology.cf.ericsson.net/planning_ontology_oslc_shapes#> .
@prefix wd: <http://ontology.cf.ericsson.net/warehouse_domain_and_problem#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix oslc: <http://open-services.net/ns/core#> .
@prefix sh: <http://www.w3.org/ns/shacl#> . # shapes constraint languge SHACL
@base <http://ontology.cf.ericsson.net/planning_ontology> .

#studied from the bnf specification of PDDL 2.1. https://www.jair.org/media/1129/live-1129-2132-jair.pdf without durative actions

<http://ontology.cf.ericsson.net/planning_ontology> rdf:type rdf:Ontology ;
                                                   rdf:versionIRI <http://ontology.cf.ericsson.net/planning_ontology/1.0.0> .

:Action rdf:type rdf:class .
:VariableType rdf:type rdf:class .
:Variable rdf:type rdf:class   .
:Fluent rdf:type rdf:class  .
:FluentType rdf:type rdf:class  .
:Predicate rdf:type rdf:class .  #all subclasses can have an order
:AssignmentOperator rdf:subclass :Predicate .  #are possible in effects over fluents (decrease, increase, scaleup, assign, scaledown  #CHECK whether it is of type class or predicate
:BinnaryOperator rdf:subclass :Predicate  .  #are possible in preconditions and effects over fluents (+, -, * and /)


#Predicates defined by the user e.g. isat, carrying etc. Can appear in precondition and effect
:UserPredicate rdf:subclass :Predicate .

:BinaryComparison rdf:subclass :Predicate . #e.g. binary comparision operators are only allowed in precondition

:EffectPredicate rdf:subclass :Predicate .



#logical predicates
:And rdf:subclass rdf:Predicate ;
                 rdfs:label "and".

:AndPrecondition rdf:subclass :And .
:AndEffect rdf:subclass :And .


:Or rdf:subclass :Predicate ;
    rdfs:label "or".

:Not rdf:subclass :Predicate ;
     rdfs:label "not".

:Imply rdf:subclass :Predicate ;
       rdfs:label "imply".

:Forall rdf:subclass :Predicate ;
       rdfs:label "forall".

:Exists rdf:subclass :Predicate ;
       rdfs:exists "forall".



#binary comparison only allowed in precondition
:GT rdf:subclass :BinaryComparison ;
    rdfs:label ">".
:LT rdf:type :BinaryComparison ;
    rdfs:label "<".
:EQ rdf:type :BinaryComparison ;
    rdfs:label "=".
:GE rdf:type :BinaryComparison ;
    rdfs:label ">=".
:LE rdf:type :BinaryComparison ;
    rdfs:label "<=".

#binary operations over fluents, allowed in precondition and effect
:Plus rdf:type :BinaryOperator ;
      rdfs:label "+".
:Minus rdf:type :BinaryOperator ;
      rdfs:label "-".
:Multply rdf:type :BinaryOperator ;
        rdfs:label "*".
:Divide rdf:type :BinaryOperator ;
        rdfs:label "/".


#assignment operators allowed in effect, they can be done only over fluent
:Increase rdf:type :AssignmentOperator ;
          rdfs:label "increase".
:Decrease rdf:type :AssignmentOperator ;
          rdfs:label "decrease".
:Assign rdf:type :AssignmentOperator ;
        rdfs:label "assign".
:ScaleUp rdf:type :AssignmentOperator ;
        rdfs:label "scale-up".
:ScaleDown rdf:type :AssignmentOperator ;
           rdfs:label "scale-down".

#for conditional effect, allowed only in the effect
:When rdf:type :EffectPredicate .






# :hasPreconditionArguments rdf:type owl:ObjectProperty ;
#                                             oslc:domain :Precondition ;
#                                             oslc:range :UserPredicate ,  #this is the top predicate, and, forall, or just a UserPredicate e.g. is_at
#                                                        :CommonPredicate ;
#                                             oslc:occurs oslc:Exactly-one .
# :hasNestedPredicates rdf:type owl:ObjectProperty ;
#                                     oslc:domain :CommonPredicate ;
#                                     oslc:range :CommonPredicate ,
#                                                :UserPredicate ,
#                                                :BinaryComparison .
#
#
# :hasEffectArguments rdf:type owl:ObjectProperty ;
#                   oslc:domain :Effect ;
#                   oslc:range :EffectPredicate ,
#                              :CommonPredicate ,
#                              :AssignmentOperator ;
#                   oslc:occurs oslc:Exectly-one .
#
#
# :hasFluents rdf:type owl:ObjectProperty ; #used for operating over fluents using the assignment operators and binary comparison operators
#           oslc:domain :AssignmentOperator ,
#                       :BinaryComparison ,                                            :BinaryOperator ;
#           oslc:range :Fluent ;
#           oslc:occurs oslc:One-Or-Many .
#
#
#
#                                                                                                       #:hasPosition rdf:type owl:ObjectProperty ;
#                                                                                                       #                    oslc:domain pp:Predicate ;
#                                                                                                       #                    oslc:range xsd:integer .
