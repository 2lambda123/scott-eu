# NOTE!!!: This file will be rewriten according to the OSLC SHAPES and resources specified in pp.ttl
# OWL will be completly removed

@prefix : <http://ontology.cf.ericsson.net/warehouse_domain#> .
@prefix warehouse: <http://ontology.cf.ericsson.net/warehouse_ontology#> . #this should be later replaced by some ontology (ies) for robotics, or internal logistics
@prefix pp: <http://ontology.cf.ericsson.net/planning_ontology#> .
@prefix wd: <http://ontology.cf.ericsson.net/warehouse_domain#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix oslc: <http://open-services.net/ns/core#> .
@prefix sh: <http://www.w3.org/ns/shacl#> . # shapes constraint languge SHACL
@base <http://ontology.cf.ericsson.net/warehouse_domain#> .

# all the types used in the domain file
warehouse:Robot rdf:type pp:VariableType .
warehouse:Waypoint rdf:type pp:VariableType .
warehouse:Place rdf:type pp:VariableType .
warehouse:Charge rdf:type pp:VariableType .
warehouse:Object rdf:type pp:VariableType .

# fluent Types



_:capacity rdf:type owl:NamedIndividual ,
                    pp:FluentType ;
           rdfs:label "capacity";
           pp:hasFluentVariable "r" ;
           pp:hasFluentVariableType warehouse:Robot .

_:charge_level rdf:type owl:NamedIndividual ,
                        pp:FluentType ;
               rdfs:label "charge-level";
               pp:hasFluentVariable "r" ;
               pp:hasFluentVariableType warehouse:Robot .

 _:max_charge rdf:type owl:NamedIndividual ,
                       pp:FluentType ;
              rdfs:label "max-Charge";
              pp:hasFluentVariable "r" ;
              pp:hasFluentVariableType warehouse:Robot .

_:low_charge rdf:type owl:NamedIndividual ,
                      pp:FluentType;
             rdfs:label "low-Charge";
             pp:hasFluentVariable "r" ;
             pp:hasFluentVariableType warehouse:Robot .

_:high_charge rdf:type owl:NamedIndividual ,
                       pp:FluentType;
              rdfs:label "high-Charge";
              pp:hasFluentVariable "r" ;
              pp:hasFluentVariableType warehouse:Robot .

#fluents that are instances of fluent Types
_:charge_level1 rdf:type owl:NamedIndividual ,
                         pp:Fluent ;
                pp:hasFluentVariable  _:robot1 ;
                pp:hasFluentType  _:charge-level  .

#for the action moveToWaypoint
:moveToWaypoint rdf:type owl:NamedIndividual ,
                         pp:Action ;
                rdfs:label "moveToWaypoint";
                pp:hasVariable _:robot1 ;
                pp:hasVariable _:from_waypoint1 ;
                pp:hasVariable _:to_waypoint1 ;
                pp:hasPrecondition _:pred1 ;
                pp:hasEffect _:effect1 .

_:robot1 rdf:type owl:NamedIndividual ;
         pp:type pp:Variable ;
         pp:hasVariableType warehouse:Robot ;
         rdfs:label "robot" ;
         sh:order "0".

         #SHOULD WE HAVE AS WELL INSTANCES, VARIABLE INSTANCES??? robot11

_:from_waypoint1 rdf:type owl:NamedIndividual ;
         pp:type pp:Variable ;
         pp:hasVariableType warehouse:Waypoint ;
         rdfs:label "from-waypoint" ;
         sh:order "1".

_:to_waypoint1 rdf:type owl:NamedIndividual ;
                  pp:type pp:Variable ;
                  pp:hasVariableType warehouse:Waypoint ;
                  rdfs:label "to-waypoint" ;
                  sh:order "2".


_:pred1 pp:hasPreconditionArguments _:and1 .

_:and1  rdf:type owl:NamedIndividual ,
                 pp:And ;
        pp:hasNestedPredicates _:isat1 ,  #here it is important the order of the predicates
                               _:not1 ,
                               _:decrease1 .
_:isat1 rdf:type owl:NamedIndividual ,
                 pp:UserPredicate ;
        pp:hasVariableArguments _:robot1 , #:_robot1 might have a different order position in predicate isat1 and another predicate, but to be the same variable used in the action

                                _:from-waypoint ;
        sh:order "0".   #isat1 has first position in and1. Sometimes positions might not be needed, but for BinaryComparison they are needed, and also for BinaryOperator

_:not1 rdf:type owl:NamedIndividual ,
                 pp:Not ;
        pp:hasVariableArguments _:robot1 ,
                                _:from-waypoint ;
        sh:order "1".

_:decrease1 rdf:type owl:NamedIndividual ,
                     pp:AssignmentOperator ;
            pp:hasFluents _:charge_level1 ;
            sh:order "2".
